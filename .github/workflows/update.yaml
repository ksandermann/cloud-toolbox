name: Update Versions
run-name: ${{ github.actor }} is UPDATING ðŸš€
on:
  schedule:
    #UTC - https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#schedule
    - cron: '20 3 * * MON'
    - cron: '20 3 * * FRI'
    - cron: '0 7 * * FRI'
  workflow_dispatch:
jobs:
  Clean-Repo:
    runs-on: [self-hosted, Linux, X64]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get current date
        run: echo "RELEASE_DATE=$(date --rfc-3339=date)" >> ${GITHUB_ENV}
      - name: Fetch origin
        run: git fetch origin
      - name: Checkout master
        run: git checkout master
      - name: Delete local branches
        run: git checkout -b "tmp" || true  && git checkout master && git for-each-ref --format '%(refname:short)' refs/heads | grep -v "master\|main" | xargs git branch -D
      - name: Pull origin (allow unrelated histories)
        run: git pull origin master --allow-unrelated-histories || true
  Create-Branch:
    needs: Clean-Repo
    runs-on: [self-hosted, Linux, X64]
    steps:
      - name: Get current date
        run: echo "RELEASE_DATE=$(date --rfc-3339=date)" >> ${GITHUB_ENV}
      - name: Create branch
        run: git checkout -b ${{ env.RELEASE_DATE }}_automation
  Update-Versions:
    needs: Create-Branch
    runs-on: [self-hosted, Linux, X64]
    steps:
      - name: update versions
        run: bash update_versions.sh
  Commit:
    needs: Update-Versions
    runs-on: [self-hosted, Linux, X64]
    steps:
      - name: Get current date
        run: echo "RELEASE_DATE=$(date --rfc-3339=date)" >> ${GITHUB_ENV}
      - name: Commit
        run: |
          git config --local user.email "kevin.sandermann@gmail.com"
          git config --local user.name "github-actions[bot]"
          git commit --allow-empty -a -m "Release ${{ env.RELEASE_DATE }}"
  Push-Changes:
    needs: Commit
    runs-on: [self-hosted, Linux, X64]
    steps:
      - name: Get current date
        run: echo "RELEASE_DATE=$(date --rfc-3339=date)" >> ${GITHUB_ENV}
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ env.RELEASE_DATE }}_automation
  Create-PR:
    needs: Push-Changes
    runs-on: [self-hosted, Linux, X64]
    steps:
      - name: Get current date
        run: echo "RELEASE_DATE=$(date --rfc-3339=date)" >> ${GITHUB_ENV}

      - name: Prepare PR body
        run: |
          if [ -f changed_versions.txt ]; then
            BODY="# Changelog%0A"
            while IFS= read -r line; do
              BODY="${BODY}- ${line}%0A"
            done < changed_versions.txt
            echo "BODY=${BODY}" >> $GITHUB_ENV
          else
            echo "BODY=# Changelog%0A(no version changes)%0A" >> $GITHUB_ENV
          fi

      - name: create PR
        run: |
          echo "PR BODY:"
          echo "$BODY"
      
          RESPONSE=$(curl -s -w "%{http_code}" -o pr_response.txt \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/ksandermann/cloud-toolbox/pulls \
            -d "{\"title\":\"Release ${{ env.RELEASE_DATE }}\",\"body\":\"${{ env.BODY }}\",\"head\":\"${{ env.RELEASE_DATE }}_automation\",\"base\":\"master\"}"
